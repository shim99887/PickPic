<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.blog.model.mapper.PostMapper">

	<!-- PostController -->
	<select id="getList" parameterType="map" resultType="PostDto">
		select postNo, title, content,
				case when date_format(uploadDate, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(uploadDate, '%H:%i:%s')
				else date_format(uploadDate, '%y.%m.%d')
				end uploadDate,
				case when date_format(modifyDate, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(modifyDate, '%H:%i:%s')
				else date_format(modifyDate, '%y.%m.%d')
				end modifyDate,
				likeCnt, email, name,
				(
					select thumbnail
					from (
						select pp.*, (select count(*)
									from post_vote
									where pp.picNo = post_vote.picNo
						            ) as count
						from post_pics pp
						where post.postNo = pp.postNo
						order by count desc
						) as temp
					limit 1
				) as thumbnail,
				(
					select thumbnail
					from (
						select pp.*, (select count(*)
									from post_vote
									where pp.picNo = post_vote.picNo
						            ) as count
						from post_pics pp
						where post.postNo = pp.postNo
						order by count desc
						) as temp
					limit 1, 1
				) as thumbnailTwo,
				(
					select count(*)
					from comment
		            where post.postNo = comment.postNo
				) as commentCnt 
		from post join member using(email)
		where temp = 0
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				and title like concat('%', #{word}, '%')
			</if>
			<if test="key != 'title'">
				and #{key} = #{word}
			</if>
		</if>
		<if test="sortBy == 'like'">
            order by likeCnt desc
        </if>
        <if test="sortBy != 'like'">
			order by postNo desc, modifyDate desc
        </if>
		limit #{start}, #{spp}
	</select>
	
	<select id="getLikePost" parameterType="int" resultType="PostDto">
		select postNo, title, content,
				case when date_format(uploadDate, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(uploadDate, '%H:%i:%s')
				else date_format(uploadDate, '%y.%m.%d')
				end uploadDate,
				case when date_format(modifyDate, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(modifyDate, '%H:%i:%s')
				else date_format(modifyDate, '%y.%m.%d')
				end modifyDate,
				likeCnt, email, name,
				(
					select modPicName
					from (
						select pp.*, (select count(*)
									from post_vote
									where pp.picNo = post_vote.picNo
						            ) as count
						from post_pics pp
						where post.postNo = pp.postNo
						order by count desc
						) as temp
					limit 1
				) as thumbnail,
				(
					select modPicName
					from (
						select pp.*, (select count(*)
									from post_vote
									where pp.picNo = post_vote.picNo
						            ) as count
						from post_pics pp
						where post.postNo = pp.postNo
						order by count desc
						) as temp
					limit 1, 1
				) as thumbnailTwo
		from post join member using(email)
		where temp = 0
        order by likeCnt desc
		limit #{no},1
	</select>

	<select id="getTotalCount" parameterType="map" resultType="int">
		select count(email)
		from post
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'title'">
				where #{key} = #{word}
			</if>
		</if>
	</select>
	
	<select id="getCount" resultType="int">
		select count(*)
		from post
	</select>
	
	<select id="getLastPostNo" parameterType="string" resultType="int">
		select postNo
		from post
		where email = #{email}
		order by modifyDate desc
		limit 1
	</select>
	
	<select id="getOne" parameterType="int" resultType="PostDto">
		select p.*, m.name
		from post p join member m
			using(email)
		where postNo = #{postMo}
	</select>
	
	<insert id="write" parameterType="PostDto">
		insert into post (title, content, email)
		values (#{title}, #{content}, #{email})
	</insert>
	
	<update id="modify" parameterType="PostDto">
		update post
		set title = #{title}, content = #{content}, modifyDate = current_timestamp
		where postNo = #{postNo}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from post
		where postNo = #{postNo}
	</delete>
	
 	<select id="likeCount" parameterType="int" resultType="int">
 		select count(pmLikeNo)
 		from post_member_like
 		where postNo = #{postNo} and likeCheck = 'Y'
 	</select>
	
	<select id="likeCheck" parameterType="map" resultType="int">
	    select count(pmLikeNo)
	    from post_member_like
	    where postNo=#{postNo} and email=#{email}
	</select>
	
	<select id="likeInfo" parameterType="map" resultType="PostLikeDto">
	    select pmLikeNo, postNo, email, likeCheck
	    from post_member_like
	    where postNo=#{postNo} and email=#{email}
	</select>
	
	<insert id="insertLike" parameterType="map">
		insert into post_member_like(postNo, email)
		values (#{postNo}, #{email})
	</insert>
	
	<update id="updateLike" parameterType="map">
		update post_member_like
		set likeCheck = 
			case
				when likeCheck = 'Y' 
					then 'N'
				when likeCheck = 'N'
					then 'Y'
		where postNo = #{postNo} and email = #{email}
	</update>
	
	<update id="like" parameterType="map">
		update post_member_like
		set likeCheck = 'Y'
		where postNo = #{postNo} and email = #{email}
	</update>
	
	<update id="unlike" parameterType="map">
		update post_member_like
		set likeCheck = 'N'
		where postNo = #{postNo} and email = #{email}
	</update>
	
	<update id="likeCntUp" parameterType="int">
		update post
		set likeCnt = likeCnt + 1
		where postNo = #{postNo}
	</update>
	
	<update id="likeCntDown" parameterType="int">
		update post
		set likeCnt = likeCnt - 1
		where postNo = #{postNo}
	</update>
	
	<insert id="uploadFile">
		insert into post_pics (postNo, oriPicName, modPicName, thumbnail, picSize)
		values(#{postNo}, #{oriPicName}, #{modPicName}, #{thumbnail}, #{picSize})
	</insert>
	
	<select id="getImages" parameterType="int" resultType="ImgDto">
		select picNo, postNo, oriPicName, modPicName, thumbnail, picSize,
			date_format(uploadDate, '%Y%m%d') as uploadDate,
			(	select count(vNo)
				from post_vote
    			where post_vote.picNo = post_pics.picNo
   			) as voteCnt
		from post_pics
		where postNo = #{postNo}
	</select>
	
	<select id="getImgInfo" parameterType="string" resultType="ImgDto">
		select picNo, postNo, oriPicName, modPicName, thumbnail, picSize,
			date_format(uploadDate, '%Y%m%d') as uploadDate,
			(	select count(vNo)
				from post_vote
    			where post_vote.picNo = post_pics.picNo
   			) as voteCnt
		from post_pics
		where picNo = #{picNo}
	</select>
	
	<delete id="deleteImage" parameterType="string">
		delete from post_pics
		where picNo = #{picNo}
	</delete>
	
	<!-- PostTempController -->
	
	<select id="getTempList" parameterType="map" resultType="PostDto">
		select postNo, title, content, temp, 
				case when date_format(uploadDate, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(uploadDate, '%H:%i:%s')
				else date_format(uploadDate, '%y.%m.%d')
				end uploadDate,
				case when date_format(modifyDate, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(modifyDate, '%H:%i:%s')
				else date_format(modifyDate, '%y.%m.%d')
				end modifyDate,
				likeCnt, email, name
		from post join member using(email)
		where temp = 1 and email = #{email}
		order by postNo desc, modifyDate desc
	</select>
	
	<select id="getTempCount" parameterType="string" resultType="int">
		select count(postNo)
		from post
		where temp = 1 and email = #{email}
	</select>
	
	<insert id="writeTemp" parameterType="PostDto">
		insert into post (title, content, email, temp)
		values (#{title}, #{content}, #{email}, 1)
	</insert>
	
	<update id="writeTemptoDB" parameterType="PostDto">
		update post
		set temp = 0, title = #{title}, content = #{content}, uploadDate = current_timestamp, modifyDate = current_timestamp
		where postNo = #{postNo}
	</update>
	
</mapper>
